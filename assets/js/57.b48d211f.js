(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{510:function(e,_,s){"use strict";s.r(_);var t=s(28),v=Object(t.a)({},(function(){var e=this,_=e.$createElement,s=e._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[e._v("#")]),e._v(" 1. 概念")]),e._v(" "),s("p",[e._v("1 个模块可能有多个⽅法，只要其中的某个⽅法使⽤到了，则整个⽂件都会被打到\nbundle ⾥⾯去，tree shaking 就是只把⽤到的⽅法打⼊ bundle ，没⽤到的⽅法会在\nuglify 阶段被擦除掉。")]),e._v(" "),s("ul",[s("li",[e._v("return 后面的代码")]),e._v(" "),s("li",[e._v("只声明，未使用的函数")]),e._v(" "),s("li",[e._v("只引入，未使用的代码")])]),e._v(" "),s("h2",{attrs:{id:"_2-限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-限制"}},[e._v("#")]),e._v(" 2. 限制")]),e._v(" "),s("ul",[s("li",[e._v("使用ES Module规范模块，，才能执行Tree Shaking")]),e._v(" "),s("li",[e._v("Tree Shaking依赖于ES Modules的静态语法分析")])]),e._v(" "),s("h2",{attrs:{id:"_3-tree-shaking-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tree-shaking-原理"}},[e._v("#")]),e._v(" 3. Tree-shaking 原理")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("利⽤ "),s("code",[e._v("ES6")]),e._v(" 模块的特点:")]),e._v(" "),s("ul",[s("li",[e._v("只能作为模块顶层的语句出现")]),e._v(" "),s("li",[e._v("import 的模块名只能是字符串常量")]),e._v(" "),s("li",[e._v("import binding 是 immutable的\n代码擦除： uglify 阶段删除⽆⽤代码")])])]),e._v(" "),s("li",[s("p",[e._v("开发模式：")]),e._v(" "),s("ul",[s("li",[e._v("usedExports")]),e._v(" "),s("li",[e._v("sideEffects")])])])]),e._v(" "),s("p",[e._v("现象：构建后的代码存在⼤量闭包代码\n"),s("img",{attrs:{src:"/images/webpack/compile.png",alt:""}})]),e._v(" "),s("p",[e._v("导致:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("⼤量作⽤域包裹代码，导致体积增⼤（模块越多越明显）")])]),e._v(" "),s("li",[s("p",[e._v("运⾏代码时创建的函数作⽤域变多，内存开销变⼤")])]),e._v(" "),s("li",[s("p",[e._v("模块转换分析:")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/webpack/transform.png",alt:""}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("被 webpack 转换后的模块会带上⼀层包裹")])]),e._v(" "),s("li",[s("p",[e._v("import 会被转换成 __webpack_require\n"),s("img",{attrs:{src:"/images/webpack/module.png",alt:""}})])]),e._v(" "),s("li",[s("p",[e._v("打包出来的是⼀个"),s("code",[e._v("IIFE")]),e._v(" (匿名闭包)")])]),e._v(" "),s("li",[s("p",[e._v("modules 是⼀个数组，每⼀项是⼀个模块初始化函数")])]),e._v(" "),s("li",[s("p",[e._v("通过 "),s("code",[e._v("WEBPACK_REQUIRE_METHOD(0)")]),e._v(" 启动程序")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("__webpack_require")]),e._v(" ⽤来加载模块，返回 "),s("code",[e._v("module.exports")])])])]),e._v(" "),s("h2",{attrs:{id:"_4-scope-hoisting-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-scope-hoisting-原理"}},[e._v("#")]),e._v(" 4. scope hoisting 原理")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("原理：将所有模块的代码按照引⽤顺序放在⼀个函数作⽤域⾥，然后适当的重命名⼀\n些变量以防⽌变量名冲突")])]),e._v(" "),s("li",[s("p",[e._v("对⽐: 通过 "),s("code",[e._v("scope hoisting")]),e._v(" (作用域提升)可以减少函数声明代码和内存开销")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("scope hoisting")]),e._v(" 使⽤：\nwebpack mode 为 production 默认开启,必须是 ES6 语法，CJS 不⽀持")])])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("webpack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("optimize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ModuleConcatenationPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("h2",{attrs:{id:"_5-开发模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-开发模式"}},[e._v("#")]),e._v(" 5. 开发模式：")]),e._v(" "),s("h4",{attrs:{id:"usedexports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usedexports"}},[e._v("#")]),e._v(" usedExports")]),e._v(" "),s("p",[e._v("开启：")]),e._v(" "),s("ul",[s("li",[e._v("optimization.usedExports(标记没用的代码)\n"),s("ul",[s("li",[e._v("/* unused harmony export xxxx */")])])]),e._v(" "),s("li",[e._v("terser-webpack-plugin(删除没用的代码)\n"),s("ul",[s("li",[e._v("optimization.minimize: true(删除unused harmony export xxx 标记的代码)")]),e._v(" "),s("li",[e._v("webpack4 需要单独安装（webpack5 无需安装）")])])])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("兼容性问题")]),e._v(" "),s("p",[e._v("Tree Shaking 与Source Map 存在兼容性问题")]),e._v(" "),s("p",[e._v("开启Tree Shaking")]),e._v(" "),s("p",[e._v("Source Mao模式只能选择一下四种：")]),e._v(" "),s("p",[e._v("devtool：source-map｜inline-source-map|hidden-source-map|nosources-source-map")])]),e._v(" "),s("h4",{attrs:{id:"sideeffects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sideeffects"}},[e._v("#")]),e._v(" sideEffects")]),e._v(" "),s("ul",[s("li",[e._v("副作用:\n"),s("ul",[s("li",[e._v("无副作用：如果一个模块单纯的导入导出变量，那它就无副作用")]),e._v(" "),s("li",[e._v("有副作用：如果一个模块还修改其他模块或者全局的一些东西，就有副作用\n"),s("ul",[s("li",[e._v("修改全局变量")]),e._v(" "),s("li",[e._v("在原型上扩展方法")]),e._v(" "),s("li",[e._v("css的引入")])])])])]),e._v(" "),s("li",[e._v("sideEffects的作用：把未使用但无副作用的模块一并删除\n"),s("ul",[s("li",[e._v("对于没有副作用的模块，未使用代码不会被打包（相当于压缩了输出内容）")])])]),e._v(" "),s("li",[e._v("开启副作用：(webpack.config.js)\n"),s("ul",[s("li",[e._v("optimization.sideEffects: true")])])]),e._v(" "),s("li",[e._v("标识代码是否有副作用（package.json）\n"),s("ul",[s("li",[e._v("sideEffects\n"),s("ul",[s("li",[e._v("false: 所有代码都没副作用")]),e._v(" "),s("li",[e._v("true： 所有代码都有副作用")]),e._v(" "),s("li",[e._v("数组：告诉webpack哪些模块有副作用，不删除")])])])])])])])}),[],!1,null,null,null);_.default=v.exports}}]);