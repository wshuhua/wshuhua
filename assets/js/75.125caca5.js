(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{528:function(a,t,e){"use strict";e.r(t);var s=e(28),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"_01-查询webpack入口文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-查询webpack入口文件"}},[a._v("#")]),a._v(" 01. 查询webpack入口文件")]),a._v(" "),e("p",[a._v("通过"),e("code",[a._v("npm run build")]),a._v(" 运行webpack")]),a._v(" "),e("p",[a._v("在命令行运行命令后，npm会让命令行工具进入node_modules.bin目录查找是否存在 webpack.sh 或者 webpack.cmd 文件，如果存在，就执行，不存在，就抛出错误。")]),a._v(" "),e("p",[a._v("实际的入口文件是："),e("code",[a._v("node_modules\\webpack\\bin\\webpack.js")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exitCode "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//1. 正常执行返回runCommand(packageManager, installOptions.concat(cli.package))")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//2. 运行某个命令const isInstalled = packageName =>{...}; ")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//3. 判断某个包是否安装const CLIs =[...]; ")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//4. webpack 可用的CLI: webpack-cli和webpack-command")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" installedClis "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" CLIs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("filter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("cli")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" cli"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("installed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//5. 判断是否两个ClI 是否安装了 if (installedClis.length === 0){...}else if ")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//6. 根据安装数量进行处理(installedClis.length === 1){...}else{...}.")]),a._v("\n")])])]),e("p",[a._v("webpack 最终找到 "),e("code",[a._v("webpack-cli (webpack-command)")]),a._v(" 这个npm包，并且执行 CLI")]),a._v(" "),e("h2",{attrs:{id:"_02-webpack-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_02-webpack-cli"}},[a._v("#")]),a._v(" 02.  webpack-cli")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("引入 yargs，对命令行进行定制")])]),a._v(" "),e("li",[e("p",[a._v("分析命令行参数，对各个参数进行转换，组成编译配置项")])]),a._v(" "),e("li",[e("p",[a._v("引用webpack，根据配置项进行编译和构建")])])]),a._v(" "),e("h2",{attrs:{id:"_03-tapable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_03-tapable"}},[a._v("#")]),a._v(" 03. Tapable")]),a._v(" "),e("p",[a._v("Tapable 是一个类似于 Node.js 的 EventEmitter 的库, 主要是控制钩子函数的发布与订阅,控制着 webpack 的插件系统。")]),a._v(" "),e("p",[a._v("Tapable库暴露了很多 Hook（钩子）类，为插件提供挂载的钩子")]),a._v(" "),e("h2",{attrs:{id:"_04-webpack的编译都按照下面的钩子调用顺序执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_04-webpack的编译都按照下面的钩子调用顺序执行"}},[a._v("#")]),a._v(" 04. webpack的编译都按照下面的钩子调用顺序执行")]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/webpack/webpack.png",alt:""}})]),a._v(" "),e("h4",{attrs:{id:"webpackoptionsapply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackoptionsapply"}},[a._v("#")]),a._v(" WebpackOptionsApply")]),a._v(" "),e("p",[a._v("将所有的配置 "),e("code",[a._v("options")]),a._v(" 参数转换成 webpack 内部插件使用默认插件列表")]),a._v(" "),e("ul",[e("li",[a._v("output.library -> LibraryTemplatePlugin")]),a._v(" "),e("li",[a._v("externals -> ExternalsPlugin")]),a._v(" "),e("li",[a._v("devtool -> EvalDevtoolModulePlugin, SourceMapDevToolPlugin")]),a._v(" "),e("li",[a._v("AMDPlugin, CommonJsPlugin")]),a._v(" "),e("li",[a._v("RemoveEmptyChunksPlugin")])]),a._v(" "),e("h4",{attrs:{id:"compiler-hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compiler-hooks"}},[a._v("#")]),a._v(" Compiler hooks")]),a._v(" "),e("p",[a._v("流程相关：")]),a._v(" "),e("ul",[e("li",[a._v("(before-)run")]),a._v(" "),e("li",[a._v("(before-/after-)compile")]),a._v(" "),e("li",[a._v("make")]),a._v(" "),e("li",[a._v("(after-)emit ·done")])]),a._v(" "),e("p",[a._v("监听相关：")]),a._v(" "),e("ul",[e("li",[a._v("watch-run")]),a._v(" "),e("li",[a._v("watch-close")])]),a._v(" "),e("h4",{attrs:{id:"compilation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compilation"}},[a._v("#")]),a._v(" Compilation")]),a._v(" "),e("p",[a._v("Compiler 调用 Compilation 生命周期方法")]),a._v(" "),e("ul",[e("li",[a._v("addEntry -> addModuleChain")]),a._v(" "),e("li",[a._v("finish (上报模块错误)")]),a._v(" "),e("li",[a._v("seal")])]),a._v(" "),e("h4",{attrs:{id:"modulefactory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modulefactory"}},[a._v("#")]),a._v(" ModuleFactory")]),a._v(" "),e("p",[a._v("NormalModuleFactory -> ModuleFactory\nContextModuleFactory -> ModuleFactory")])])}),[],!1,null,null,null);t.default=n.exports}}]);