(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{522:function(a,t,e){"use strict";e.r(t);var s=e(28),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"_1-webpack核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack核心概念"}},[a._v("#")]),a._v(" 1. webpack核心概念")]),a._v(" "),e("ul",[e("li",[a._v("入口(Entry)")]),a._v(" "),e("li",[a._v("出口(Output)")]),a._v(" "),e("li",[a._v("加载器(Loader)")]),a._v(" "),e("li",[a._v("插件(Plugins)")]),a._v(" "),e("li",[a._v("模式(Mode)")]),a._v(" "),e("li",[a._v("模块(Module)")]),a._v(" "),e("li",[a._v("依赖图(Dependency Graph)")])]),a._v(" "),e("h3",{attrs:{id:"_2-加载器-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-加载器-loader"}},[a._v("#")]),a._v(" 2. 加载器(Loader)")]),a._v(" "),e("ul",[e("li",[a._v("模块代码转化器，使Webpack 有能力去处理除了 "),e("code",[a._v("JS")]),a._v("、"),e("code",[a._v("JSON")]),a._v(" 以外的其他类型的文件\n"),e("ul",[e("li",[a._v("webpack默认只能识别js，想要处理其它类型的文件，需要对应的loader")]),a._v(" "),e("li",[a._v("命名规则：xxx-loader(css-loader | html-loader | file-loader)")]),a._v(" "),e("li",[e("a",{attrs:{href:"https://webpack.docschina.org/loaders#root",target:"_blank",rel:"noopener noreferrer"}},[a._v("常用loader"),e("OutboundLink")],1)])])])]),a._v(" "),e("h3",{attrs:{id:"_3-插件-plugins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-插件-plugins"}},[a._v("#")]),a._v(" 3. 插件(Plugins)")]),a._v(" "),e("ul",[e("li",[a._v("实现loader之外的其他功能\n"),e("ul",[e("li",[a._v("plugin是webpack的支柱，用来实现丰富的功能")]),a._v(" "),e("li",[a._v("命名规则：xxx-webpack-plugin")]),a._v(" "),e("li",[e("a",{attrs:{href:"https://webpack.docschina.org/plugins#root",target:"_blank",rel:"noopener noreferrer"}},[a._v("常用plugins"),e("OutboundLink")],1)])])]),a._v(" "),e("li",[a._v("loader 和plugins 本质都是npm包\n\x3c!-- - copy-webpack-plugin")]),a._v(" "),e("li",[a._v("clean-webpack-plugin --\x3e")])]),a._v(" "),e("h3",{attrs:{id:"_4-模式-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-模式-mode"}},[a._v("#")]),a._v(" 4. 模式(Mode)")]),a._v(" "),e("ul",[e("li",[a._v("development(自动优化打包速度，添加一些调试过程中的辅助)")]),a._v(" "),e("li",[a._v("production（自动优化打包结果）")]),a._v(" "),e("li",[a._v("none （运行最原始的包，不做任何额外的处理）")])]),a._v(" "),e("h3",{attrs:{id:"_5-模块-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-模块-module"}},[a._v("#")]),a._v(" 5. "),e("a",{attrs:{href:"https://webpack.docschina.org/concepts/modules#root",target:"_blank",rel:"noopener noreferrer"}},[a._v("模块(Module)"),e("OutboundLink")],1)]),a._v(" "),e("ul",[e("li",[a._v("一切皆模块\n"),e("ul",[e("li",[a._v("js模块")]),a._v(" "),e("li",[a._v("一段css")]),a._v(" "),e("li",[a._v("一张图片")]),a._v(" "),e("li",[a._v("...")])])])]),a._v(" "),e("h3",{attrs:{id:"_5-resolve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-resolve"}},[a._v("#")]),a._v(" 5. resolve")]),a._v(" "),e("ul",[e("li",[a._v("配置模块解析规则")]),a._v(" "),e("li",[a._v("alias: 配置模块加载的路径别名")]),a._v(" "),e("li",[a._v("extensions: 引入路径时，可以省略哪些后缀\n"),e("ul",[e("li",[a._v("extensions: ['js', 'json'] 默认只识别js，json")])])]),a._v(" "),e("li",[a._v("modules: 指定模块加载位置\n"),e("ul",[e("li",[a._v("[resolve(__dirname: './node_modules'), 'node_modules]")])])])]),a._v(" "),e("h3",{attrs:{id:"_6-externals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-externals"}},[a._v("#")]),a._v(" 6. externals")]),a._v(" "),e("ul",[e("li",[a._v("排除打包依赖项（防止对某个依赖项进行打包）")]),a._v(" "),e("li",[a._v("比如依赖的第三方库")])]),a._v(" "),e("h3",{attrs:{id:"_7-代码分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-代码分离"}},[a._v("#")]),a._v(" 7. 代码分离")]),a._v(" "),e("p",[a._v("如果把所有代码都打包在一起，可能最终打包的代码非常大，而从影响加载时间\n而且很多代码初始是不需要的，因此我们可以根据代码的紧急程序，将代码分割，按需加载。")]),a._v(" "),e("h4",{attrs:{id:"多入口打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多入口打包"}},[a._v("#")]),a._v(" 多入口打包")]),a._v(" "),e("ul",[e("li",[a._v("entry: 对象形式")]),a._v(" "),e("li",[a._v("output：不能写成固定形式 [name].bundle.js")]),a._v(" "),e("li",[a._v("htmlWebpackPlugin: 不同页面加载不同的bundle")])]),a._v(" "),e("h4",{attrs:{id:"代码抽离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码抽离"}},[a._v("#")]),a._v(" 代码抽离")]),a._v(" "),e("ul",[e("li",[a._v("optimization.splitChunks.chunks: 'all'")])]),a._v(" "),e("h4",{attrs:{id:"动态导入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态导入"}},[a._v("#")]),a._v(" 动态导入")]),a._v(" "),e("ul",[e("li",[a._v("懒加载\n"),e("ul",[e("li",[a._v("默认不加载，事件触发后才加载")]),a._v(" "),e("li",[a._v("webpackChunkName: '加载名称'")])])]),a._v(" "),e("li",[a._v("预加载\n"),e("ul",[e("li",[a._v("先等待其他资源加载，浏览器空闲时，再加载")]),a._v(" "),e("li",[a._v("webpackPrefetch: true")]),a._v(" "),e("li",[a._v("缺点：在移动端有兼容性问题")])])])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// import 启动懒加载")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpackChunkName: 'desc' 指定懒加载的文件名称")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpackPrefetch: true 启动预加载")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*webpackChunkName: 'desc', webpackPrefetch: true*/")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./wp'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("desc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("desc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'desc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("desc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("h3",{attrs:{id:"_8-缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-缓存"}},[a._v("#")]),a._v(" 8. 缓存")]),a._v(" "),e("ul",[e("li",[a._v("Babel\n"),e("ul",[e("li",[a._v("cacheDirectory: true（第二次构建时，会读取之前的缓存）")])])]),a._v(" "),e("li",[a._v("文件资源缓存\n"),e("ul",[e("li",[a._v("如果代码在缓存期内，代码更新后看不到实时效果")]),a._v(" "),e("li",[a._v("方案：将代码文件名称，设置为哈希名称，名称发生变化，就加载最新的内容")])])]),a._v(" "),e("li",[a._v("webpack哈希值\n"),e("ul",[e("li",[e("a",{attrs:{href:"%E6%AF%8F%E6%AC%A1webpack%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E7%9A%84hash%E5%80%BC"}},[a._v("hash")])]),a._v(" "),e("li",[a._v("[chunkHash](不同chunk的hash值不同- 同一次打包可能生成不同的chunk)")]),a._v(" "),e("li",[e("a",{attrs:{href:"%E4%B8%8D%E5%90%8C%E5%86%85%E5%AE%B9%E7%9A%84hash%E5%80%BC%E4%B8%8D%E5%90%8C-%E5%90%8C%E4%B8%80%E4%B8%AAchunk%E4%B8%AD%E5%8F%AF%E8%83%BD%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E5%86%85%E5%AE%B9"}},[a._v("contentHash")])])])])]),a._v(" "),e("h3",{attrs:{id:"_9-什么是source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-什么是source-map"}},[a._v("#")]),a._v(" 9. 什么是Source Map")]),a._v(" "),e("ul",[e("li",[a._v("是一种源代码与构建代码之间的映射技术")]),a._v(" "),e("li",[a._v("通过.map文件，将构建之后的代码与源代码之间建立映射关系")])]),a._v(" "),e("h4",{attrs:{id:"为什么需要使用-source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要使用-source-map"}},[a._v("#")]),a._v(" 为什么需要使用 Source Map")]),a._v(" "),e("ul",[e("li",[a._v("问题：构建后的代码，出了问题之后不好定位")]),a._v(" "),e("li",[a._v("方案：有了Source Map后，可以快速定位问题代码")])]),a._v(" "),e("h4",{attrs:{id:"如何生成source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何生成source-map"}},[a._v("#")]),a._v(" 如何生成Source Map")]),a._v(" "),e("ul",[e("li",[a._v("devtool: '映射模式'")]),a._v(" "),e("li",[a._v("映射模式（devtool的值）\n"),e("ul",[e("li",[a._v("不同映射模式的报错定位效果和打包执行速度不同")]),a._v(" "),e("li",[a._v("webpack4中，共13中不同的映射模式")]),a._v(" "),e("li",[a._v("webpack5中，共26种不同的映射模式")])])]),a._v(" "),e("li",[a._v("webpack5 的命名更加严格\n"),e("ul",[e("li",[a._v("cheap-module-eval-source-map => eval->cheap->module->source->map")]),a._v(" "),e("li",[e("code",[a._v("^(inline-|hidden-|eval-)?(nosources-)?(cheap-(module-)?)?source-map$")])])])]),a._v(" "),e("li",[a._v("如何获取合适的映射模式（个人建议哈）\n"),e("ul",[e("li",[a._v("开发环境：eval-cheap-module-source-map")]),a._v(" "),e("li",[a._v("生产环境：none｜ nosources-source-map")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);